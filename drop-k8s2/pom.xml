<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>
    <parent>
      <groupId>com.vvaka</groupId>
      <artifactId>dropwizard-kubernetes</artifactId>
      <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.vvaka</groupId>
    <artifactId>drop-k8s2</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Dropwizard K8S Servie 2</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <dropwizard.version>0.9.0</dropwizard.version>
        <mainClass>com.vvaka.DropWizardk8s2Application</mainClass>

        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
        <version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>

        <!-- versions for use in mvn plugins as we cannot inherit them from a BOM -->
        <fabric8.maven.plugin.version>2.2.22</fabric8.maven.plugin.version>
        <docker.maven.plugin.version>0.13.3</docker.maven.plugin.version>
        <springboot.maven.plugin.version>1.2.5.RELEASE</springboot.maven.plugin.version>

        <docker.from>docker.io/fabric8/java:8</docker.from>

        <fabric8.dockerPrefix>docker.io/</fabric8.dockerPrefix>
        <fabric8.dockerUser>vvaka/</fabric8.dockerUser>
        <docker.image>${fabric8.dockerPrefix}${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
        <docker.port.container.jolokia>8778</docker.port.container.jolokia>
        <docker.port.container.http>8080</docker.port.container.http>
        <docker.port.container.admin>8181</docker.port.container.admin>
        <docker.env.JAR>${project.artifactId}-${project.version}.jar</docker.env.JAR>
        <docker.env.CONFIG_FILE>conf/${project.artifactId}.yaml</docker.env.CONFIG_FILE>

        <!--
        <fabric8.namespace>develop</fabric8.namespace>
-->
        <!--No.of replicas to start with , this can be modified from UI later-->
        <fabric8.replicas>2</fabric8.replicas>

        <!-- To create a service in kubernetes -->
        <fabric8.service.name>${project.artifactId}</fabric8.service.name>
        <fabric8.service.type>LoadBalancer</fabric8.service.type>
        <fabric8.service.port>9103</fabric8.service.port>
        <fabric8.service.containerPort>8080</fabric8.service.containerPort>

        <fabric8.label.component>${project.artifactId}</fabric8.label.component>
        <fabric8.label.container>dropwizard-service</fabric8.label.container>
        <fabric8.label.group>vvaka</fabric8.label.group>
        <fabric8.iconRef>dropwizard-hat.png</fabric8.iconRef>


    </properties>

    <dependencies>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-client</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- fabric8 maven plguin to make kubernetes json -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--rhuss maven-docker-plugin to make docker image -->
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <verbose>true</verbose>
                    <useColor>false</useColor>
                    <autoPull>always</autoPull>
                    <images>

                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <env>
                                    <JAR>${docker.env.JAR}</JAR>
                                    <!-- we have to use /maven  as this is hardcoded in fabric8/java image run.sh file -->
                                    <ARGUMENTS>server /maven/${docker.env.CONFIG_FILE}</ARGUMENTS>
                                </env>
                                <!--<assembly>
                                    <basedir>realdoc</basedir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>-->
                                <!-- Setting inline assembly as there is no existing assembly id which can copy config to a specific directory -->
                                <assembly>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>true</useProjectArtifact>
                                                <includes>
                                                    <include>${project.groupId}:${project.artifactId}</include>
                                                </includes>
                                                <outputFileNameMapping>${project.build.finalName}.jar</outputFileNameMapping>
                                            </dependencySet>
                                        </dependencySets>

                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.basedir}/conf</directory>
                                                <outputDirectory>conf/</outputDirectory>
                                                <filtered>true</filtered>
                                                <includes>
                                                    <include>**.yaml</include>
                                                </includes>
                                                <fileMode>755</fileMode>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                                <ports>
                                    <port>8080</port>
                                    <port>8181</port>
                                </ports>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <!--SpringBoot maven plugin for making a fat jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                    <excludes>
                        <exclude>
                            <groupId>log4j</groupId>
                            <artifactId>log4j</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
